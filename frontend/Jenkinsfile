pipeline {
    agent any
    environment {
        AWS_ACCOUNT_ID = "559559966174"
        AWS_DEFAULT_REGION = "us-east-2"
        IMAGE_REPO_NAME = "todo-frontend"
        IMAGE_TAG = "${BUILD_NUMBER}"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
    }
    stage {
        // Login To AWS ECR
        stage('Logging into AWS ECR') {
            step {
                script {
                    sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
                }
            }
        }

        // Building Docker images
        stage('Build') {
            step {
                script {
                    sh "docker build -t ${IMAGE_REPO_NAME} ./frontend/" //if Dockerfile present same as Jenkins use this >> docker build -t ${IMAGE_REPO_NAME} .
                }
            }
        }

        // Uploading Docker images into AWS ECR
        stage('Pushing to ECR') {
            step {
                script {
                    sh "docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}/${IMAGE_REPO_NAME}:${IMAGE_TAG}"
                    sh "docker push ${REPOSITORY_URI}/${IMAGE_REPO_NAME}:${IMAGE_TAG}"
                }
            }
        }
    }
}


// reference
//https://medium.com/@vijulpatel865/building-docker-image-using-jenkins-pipeline-push-it-to-aws-ecr-aa02cc7a295e
//https://wiki.jenkins.io/display/JENKINS/Building+a+software+project#Buildingasoftwareproject-belowJenkinsSetEnvironmentVariables